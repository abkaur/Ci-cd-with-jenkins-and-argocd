pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket
    }
  }

  stages {
    
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/abkaur/Ci-cd-with-jenkins-and-argocd.git'
        sh 'ls -la' // Check if Jenkinsfile exists
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "abkaur/jenkins-cicd:${BUILD_NUMBER}"  // Updated DockerHub image name
        REGISTRY_CREDENTIALS = credentials('dockerhub')
      }
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
              dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Ci-cd-with-jenkins-and-argocd"
        GIT_USER_NAME = "abkaur"
      }
      steps {
        withCredentials([string(credentialsId: 'git-hub-token', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "kaurab@sheridancollege.ca"
            git config user.name "abkaur"
            BUILD_NUMBER=${BUILD_NUMBER}
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }

  } // End of stages
} // End of pipeline

